trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'bdf1f5d5-e3cb-4fb2-976a-b29911f6d37d'

  # Function app name
  functionAppName: 'veggerby-greenhouse-demo'

  # Web app name
  webAppName: 'veggerby-greenhouse'

  # Environment name
  environmentName: 'veggerby-greenhouse-demo'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build functions
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)/src/Veggerby.Greenhouse.DemoFunction/*.csproj'
        arguments: '--output $(System.DefaultWorkingDirectory)/publish/function --configuration Release'

    - task: ArchiveFiles@2
      displayName: 'Archive functions'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish/function'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/Function_$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: DotNetCoreCLI@2
      displayName: Publish web
      inputs:
        command: 'publish'
        projects: '$(System.DefaultWorkingDirectory)/src/Veggerby.Greenhouse.Web/*.csproj'
        arguments: '--output $(System.DefaultWorkingDirectory)/publish/web --configuration Release'
        publishWebProjects: true
        modifyOutputPath: false

    - task: ArchiveFiles@2
      displayName: 'Archive web'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish/web'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/Web_$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure Functions App Deploy: veggerby-greenhouse-demo'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionAppLinux
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/Function_$(Build.BuildId).zip'

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppLinux'
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/Web_$(Build.BuildId).zip'